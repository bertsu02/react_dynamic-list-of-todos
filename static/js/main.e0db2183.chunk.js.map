{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todo","selectedTodo","setSelectedTodo","className","map","t","id","completed","title","type","onClick","FILTERED_TYPES","all","active","TodoFilter","query","setQuery","setFilter","onChange","e","target","value","status","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseModal","useState","user","setUser","useEffect","userId","href","email","name","App","todos","setTodos","filter","loading","setLoading","finally","displayedTodos","useMemo","givenQuery","todosByStatus","statusTodos","filterTodosByStatus","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,kDCSCC,EAA4B,SAAC,GAEpC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,aAAcC,EACnB,EADmBA,gBAEtB,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAGJ,gCACGH,EAAKI,KAAI,SAAAC,GAAC,OACT,qBACE,UAAQ,OAERF,UAAWE,IAAMJ,GAAsB,OAANI,EAC7B,4BACA,GALN,UAOE,oBAAIF,UAAU,eAAd,SAA8BE,EAAEC,KAC/BD,EAAEE,UACD,oBAAIJ,UAAU,eAAd,SACE,sBAAMA,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAIjB,oBAAIA,UAAU,iBAEhB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWE,EAAEE,UACZ,mBACA,kBAFJ,SAIGF,EAAEG,UAGP,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,kBAAMR,EAAgBG,IAJjC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWE,IAAMJ,EAChB,mBACA,uBAjCLI,EAAEC,c,SD9BPR,K,UAAAA,E,sBAAAA,E,iBAAAA,M,KEQZ,IAAMa,EAAiB,CAACb,EAAOc,IAAKd,EAAOe,OAAQf,EAAOS,WAE7CO,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAcA,OACE,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,wBAAQ,UAAQ,eAAee,SAZZ,SAACC,GAC1BF,EAAUE,EAAEC,OAAOC,QAWb,SACGV,EAAeP,KAAI,SAACkB,GAAD,OAClB,wBAAqBD,MAAOC,EAA5B,SACGA,GADUA,YAQrB,oBAAGnB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACVoB,YAAY,YACZF,MAAON,EACPG,SAjCkB,SAACC,GACzBH,EAASG,EAAEC,OAAOC,UAkCd,sBAAMlB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAEdY,GACC,sBAAMZ,UAAU,gBAAgBqB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRhB,KAAK,SACLN,UAAU,SACVO,QArCO,WACjBM,EAAS,gBCrBAU,G,MAAmB,kBAC9B,qBAAKvB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASwB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAGpC,IAFLrC,EAEI,EAFJA,aACAsC,EACI,EADJA,iBAEA,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WDSW,IAACC,KCRZ3C,EAAa2C,ODQkBjB,EAAG,iBAAiBiB,KCPxDV,KAAKQ,KACP,CAACzC,EAAa2C,SAGf,sBAAKzC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbsC,EAGA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaK,MAIzB,wBACEG,KAAK,SACLN,UAAU,SACV,UAAQ,cACRO,QAAS6B,OAIb,sBAAKpC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaO,QAGhB,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAWF,EAAaM,UAC5B,mBACA,kBAFJ,SAIGN,EAAaM,UACV,OACA,YAGL,OAED,mBAAGsC,KAAI,iBAAYJ,EAAKK,OAAxB,SACGL,EAAKM,gBAvCd,cAAC,EAAD,QCdKC,EAAgB,WAC3B,MAA0BR,mBAAiB,IAA3C,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAwCV,mBAAsB,MAA9D,mBAAOvC,EAAP,KAAqBC,EAArB,KACA,EAA0BsC,mBAAS,IAAnC,mBAAOzB,EAAP,KAAcC,EAAd,KACA,EAA4BwB,mBAAS1C,EAAOc,KAA5C,mBAAOuC,EAAP,KAAelC,EAAf,KACA,EAA8BuB,oBAAS,GAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KAEAV,qBAAU,WACRU,GAAW,GFGe1B,EAAY,UEDnCO,KAAKgB,GACLI,SAAQ,kBAAMD,GAAW,QAC3B,IAEH,IAqBME,EAAiBC,mBAAQ,WAC7B,IAL8CC,EAKxCC,EAlBoB,SAACC,EAAqBrC,GAChD,OAAQA,GACN,KAAKxB,EAAOc,IACV,OAAO+C,EACT,KAAK7D,EAAOS,UACV,OAAOoD,EAAYR,QAAO,SAAAnD,GAAI,OAAIA,EAAKO,aACzC,KAAKT,EAAOe,OACV,OAAO8C,EAAYR,QAAO,SAAAnD,GAAI,OAAKA,EAAKO,aAC1C,QACE,OAAOoD,GASWC,CAAoBX,EAAOE,GAGjD,OAR8CM,EAMS1C,EAAf2C,EALtBP,QAAO,SAAAnD,GAAI,OAAIA,EAAKQ,MAAMqD,cAAcC,SAASL,EAAWI,oBAQ7E,CAACZ,EAAOE,EAAQpC,IAEnB,OACE,qCACE,qBAAKZ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYY,MAAOA,EAAOC,SAAUA,EAAUC,UAAWA,MAG3D,sBAAKd,UAAU,QAAf,UACGiD,GAAW,cAAC,EAAD,KACVA,GAAWH,EAAMc,OAAS,GAC1B,cAAC,EAAD,CAAU/D,KAAMuD,EAAgBtD,aAAcA,EAAcC,gBAAiBA,cAOrFD,GACC,cAAC,EAAD,CAAWA,aAAcA,EAAcsC,iBAlDrB,WACvBrC,EAAgB,aCzBpB8D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0db2183.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todo, selectedTodo, setSelectedTodo },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todo.map(t => (\n          <tr\n            data-cy=\"todo\"\n            key={t.id}\n            className={t === selectedTodo && t !== null\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{t.id}</td>\n            {t.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={t.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {t.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(t)}\n              >\n                <span className=\"icon\">\n                  <i className={t === selectedTodo\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  setFilter: (value: Status) => void;\n};\nconst FILTERED_TYPES = [Status.all, Status.active, Status.completed];\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilter,\n}) => {\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(e.target.value as Status);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            {FILTERED_TYPES.map((status) => (\n              <option key={status} value={status}>\n                {status}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo,\n  handleCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={selectedTodo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Status.all);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  const filterTodosByStatus = (statusTodos: Todo[], status: Status) => {\n    switch (status) {\n      case Status.all:\n        return statusTodos;\n      case Status.completed:\n        return statusTodos.filter(todo => todo.completed);\n      case Status.active:\n        return statusTodos.filter(todo => !todo.completed);\n      default:\n        return statusTodos;\n    }\n  };\n\n  const filterTodosByQuery = (queryTodos: Todo[], givenQuery: string) => {\n    return queryTodos.filter(todo => todo.title.toLowerCase().includes(givenQuery.toLowerCase()));\n  };\n\n  const displayedTodos = useMemo(() => {\n    const todosByStatus = filterTodosByStatus(todos, filter);\n    const todosByQuery = filterTodosByQuery(todosByStatus, query);\n\n    return todosByQuery;\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter query={query} setQuery={setQuery} setFilter={setFilter} />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && todos.length > 0 && (\n                <TodoList todo={displayedTodos} selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo\n      && <TodoModal selectedTodo={selectedTodo} handleCloseModal={handleCloseModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}